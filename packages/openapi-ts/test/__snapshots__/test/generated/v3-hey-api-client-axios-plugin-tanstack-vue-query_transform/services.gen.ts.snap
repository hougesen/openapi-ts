// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-axios';
import { type ParentModelWithDatesError, type ParentModelWithDatesResponse, type ModelWithDatesError, type ModelWithDatesResponse, type ModelWithDatesArrayError, type ModelWithDatesArrayResponse, type ArrayOfDatesError, type ArrayOfDatesResponse, type DateError, type DateResponse, type MultipleResponsesError, type MultipleResponsesResponse, ParentModelWithDatesResponseTransformer, ModelWithDatesResponseTransformer, ModelWithDatesArrayResponseTransformer } from './types.gen';

export const client = createClient(createConfig());

export const parentModelWithDates = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).post<ThrowOnError, ParentModelWithDatesResponse, ParentModelWithDatesError>({
    ...options,
    url: '/api/model-with-dates',
    responseTransformer: ParentModelWithDatesResponseTransformer
}); };

export const modelWithDates = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).put<ThrowOnError, ModelWithDatesResponse, ModelWithDatesError>({
    ...options,
    url: '/api/model-with-dates',
    responseTransformer: ModelWithDatesResponseTransformer
}); };

export const modelWithDatesArray = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).put<ThrowOnError, ModelWithDatesArrayResponse, ModelWithDatesArrayError>({
    ...options,
    url: '/api/model-with-dates-array',
    responseTransformer: ModelWithDatesArrayResponseTransformer
}); };

export const arrayOfDates = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).put<ThrowOnError, ArrayOfDatesResponse, ArrayOfDatesError>({
    ...options,
    url: '/api/array-of-dates'
}); };

export const date = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).put<ThrowOnError, DateResponse, DateError>({
    ...options,
    url: '/api/date'
}); };

export const multipleResponses = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).put<ThrowOnError, MultipleResponsesResponse, MultipleResponsesError>({
    ...options,
    url: '/api/multiple-responses'
}); };